Grading at 10/05/2022:16:51:07.577113
For commit ID b4bd51bedccb9b2969fe8f96da8d72575be74c21
Grading at Wed Oct  5 12:51:02 PM EDT 2022
Attempting to compile sortLines.c
#################################################
testcase1:
testcase1 passed, your program successfully indicated a failure
  - Valgrind showed memory leaks
valgrind was not clean
==1494998== Memcheck, a memory error detector
==1494998== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1494998== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1494998== 
==1494998== Parent PID: 1494997
==1494998== 
==1494998== 
==1494998== HEAP SUMMARY:
==1494998==     in use at exit: 640 bytes in 6 blocks
==1494998==   total heap usage: 14 allocs, 8 frees, 5,880 bytes allocated
==1494998== 
==1494998== LEAK SUMMARY:
==1494998==    definitely lost: 0 bytes in 0 blocks
==1494998==    indirectly lost: 0 bytes in 0 blocks
==1494998==      possibly lost: 0 bytes in 0 blocks
==1494998==    still reachable: 640 bytes in 6 blocks
==1494998==         suppressed: 0 bytes in 0 blocks
==1494998== Reachable blocks (those to which a pointer was found) are not shown.
==1494998== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1494998== 
==1494998== For lists of detected and suppressed errors, rerun with: -s
==1494998== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
#################################################
testcase2:
Your output is correct
  - Valgrind was clean (no errors, no memory leaks)
valgrind was clean
#################################################
testcase3:
Your output is correct
  - Valgrind was clean (no errors, no memory leaks)
valgrind was clean
#################################################
testcase4:
Your output is incorrect

Overall Grade: D
